type Product {
    id: UUID!
    title: String!
    description: String
    price: BigDecimal!
    availableAmount: Int!
}

type ProductProjection {
    id: UUID!
    title: String!
    price: BigDecimal!
    availableAmount: Int!
    storeName: String!
}

input ProductInput {
    id: UUID
    title: String!
    description: String
    price: BigDecimal!
    availableAmount: Int!
    store: UUID!
}

input ProductFilter {
    store: UUID!
    title: String
    priceFrom: BigDecimal
    priceTo: BigDecimal
    isAvailable: Boolean
}

input ProductProjectionFilter {
    title: String
    priceFrom: BigDecimal
    priceTo: BigDecimal
    isAvailable: Boolean
}

extend type Query {
    searchProducts(filter: ProductFilter!): [Product]!
    searchAllProducts(filter: ProductProjectionFilter!): [ProductProjection]!
    getProduct(id: UUID): Product
}

extend type Mutation {
    createProduct(product: ProductInput): OperationResult!
    updateProduct(product: ProductInput): OperationResult!
    deleteProduct(id: UUID): OperationResult!
}
